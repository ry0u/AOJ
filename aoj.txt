0234
queueを使って早い順に処理。vector<vector<string>>ではメモリオーバー。vector<vector<char>>でもメモリオーバーし同じ処理をmapを用いて管理したらACした。

0244
dijkstraだけど2つ続いた経路に無料券が一度使える。今が無料券の途中なのかそうでないのか管理するのが大変なので、2つ先の無料券を使った経路としてコスト0の新しいパスを作る。あとはこのパスを一度だけ使えるようにdijkstraをしていく。

0245
解き方わからん

0259
stringstream経由のstring -> int計算 -> string変換の際に桁を4桁に合わせなければいけなかった

0187
前に通らなかったもの。なんか通った。交点はこれで求まる？。ライブラリちゃんと更新しましょう

0230
現在の状態から動ける場所に動くようにしないと初期状態のマスに対応できない。queueに突っ込んで早い方から処理していく。

0231
全探索を書くことはできた。しかし同じ状態の時が何度もあるために何をメモすればいいかわからない

0270
i番目にそれ以前で一番大きい物を配列に記憶しておく。あとは余りを取りたいものをxと奥とその区間での最大がわかっているのでi += xで進んでいくとよい。

0262
dfsの引数にusedを持たせていたが、状態は遷移ごとではなくひとつのものでよい。グローバルにused一つで同じ状態を無くす。

0269
扇型の中に点があるかどうかの判定。rとccwで判定。"3点の中にある"では扇型-三角形の部分に点がある場合に正しく判定できない。

0272
ichyoさんの解答を見た。他の解答ではi番目までに勝つ回数を見る。自分の誤解法もそのようにしたがWA。よくわからず。lower_boundは昇順にしか使えないので lower_bound - b.beginでindexを出し、n-それで欲しいものを出す。

0276
引くだけ。

0277
チケットが1,2,3,4に対応するだけ

0278
ポイントはb = max(b,5) p = max(p,2)。普通に計算した場合と、この場合のみで判断できる。後の場合はこの場合より必ず値段が大きくなる。

0279
NAをnaとミスする。あほあほ

0280
指示通りにカードの分配を行う

0281
普通に再帰したらMLEになった。メモ化したらMLEになった。どうしてだ。解けない。->　|111| |21| |3|の順で貪欲に行く。これでAC

0282
RMQの実装を初めてする。RMQのmaximum ver　でもWA何がダメなのかよくわからず

0285
面倒な全探索。1<<nでビットが立ってるかどうかみる。
